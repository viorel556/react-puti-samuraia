{"version":3,"file":"static/js/792.2f581dae.chunk.js","mappings":"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","sources":["webpack://puti-samuraia/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://puti-samuraia/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://puti-samuraia/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\"};","import React from \"react\";\nimport classes from \"../ProfileInfo.module.css\"\n\nclass ProfileStatus extends React.Component {\n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState({editMode: true});\n    }\n\n    deactivateEditMode = () => {\n        this.setState({editMode: false});\n        this.props.updateMyStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState(\n            {\n                status: e.currentTarget.value\n            }\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            });\n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                {!this.state.editMode &&\n                    <div>\n                        <span onDoubleClick={this.activateEditMode}>\n                            {this.props.status || \"---------\"}\n                        </span>\n                    </div>\n                }\n\n                {this.state.editMode &&\n                    <div>\n                        <input\n                            onChange={this.onStatusChange}\n                            autoFocus={true}\n                            onBlur={this.deactivateEditMode}\n                            value={this.state.status}\n                        />\n\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default ProfileStatus;\n","import React, {useEffect, useState} from \"react\";\nimport classes from \"../ProfileInfo.module.css\"\n\nconst ProfileStatusWithHooks = (props) => {\n    // THIS IS A HOOK:\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status] );\n\n\n    // FUNCTIONAL \"editMode\"\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateMyStatus(status);\n    }\n\n    // FUNCTIONAL \"status\"\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>\n\n                        {props.status || \"---------\"}  </span>\n                </div>\n            }\n\n            {editMode &&\n                <div>\n                    <input\n                        onBlur={deactivateEditMode}\n                        onChange={onStatusChange}\n                        // autoFocus={true}\n                        value={status}\n                    />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\n\n\nconst ProfileInfo = ({profile, status, updateMyStatus}) => {\n\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div>\n\n\n            <div className={classes.descriptionBlock}>\n\n                <img src={profile.photos.large}/>\n\n                <ProfileStatusWithHooks status={status}\n                               updateMyStatus={updateMyStatus}\n                />\n\n                <p>{profile.fullName}</p>\n                <p>{profile.aboutMe} </p>\n                <p>GITHUB: {profile.contacts.github}</p>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__MJWFQ\",\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__DFcK4\",\"item\":\"Post_item__Yu4oG\"};","import React from \"react\";\nimport classes from './Post.module.css';\n\n\nconst Post = (props) => {\n    return (\n        <>\n            <div className={classes.item} >\n                <img src='https://www.boxofficepro.com/wp-content/uploads/2022/12/Avatar-The-Way-of-Water-Loak-1324x1536.jpg' />\n                { props.message }\n                <div>\n                    <span> {props.likes} likes </span>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Post;\n","import React, { PureComponent } from \"react\";\nimport classes from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\n\nconst AddNewPostForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       name='newPostText'\n                       validate={[required, maxLengthCreator(10)]}\n                       placeholder=\"Enter your post\"\n                />\n            </div>\n\n            <div>\n                <button>Add Post</button>\n            </div>\n        </form>\n    );\n}\n\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nconst MyPosts = React.memo(props => {\n\n        // mapping data\n        let myPosts = props.posts.map(pst => <Post message={pst.message} likes={pst.likesCount}/>)\n\n        //let newPostElement = React.createRef();\n\n        let onAddPost = (values) => {\n            props.addPost(values.newPostText);\n        };\n\n        return (\n            <div className={classes.postsBlock}>\n\n                <h3> My Posts </h3>\n\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\n\n                <div className={classes.posts}>\n                    {myPosts}\n                </div>\n            </div>\n        );\n\n});\n\n\nexport default MyPosts;","import React from \"react\";\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch( addPostActionCreator(newPostText) );\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {Navigate} from \"react-router-dom\";\n\nconst Profile = (props) => {\n\n\n    return (\n        <div>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         updateMyStatus={props.updateMyStatus}/>\n            <MyPostsContainer/>\n\n\n\n        </div>\n\n    );\n}\n\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {getUser, getUserStatus, updateMyStatus} from \"../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport withRouter from \"../../hoc/withRouter\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.router.params.userId;\n\n        if (!userId) {\n            userId = this.props.authorizedUserId; // my number: 30097\n        }\n\n        // CALLING 2 THUNKS (when the component mounts):\n        this.props.getUser(userId);\n        this.props.getUserStatus(userId);\n    }\n\n    render() {\n\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateMyStatus={this.props.updateMyStatus}\n            />\n        );\n    }\n}\n\nlet mapStateToProps = (state) => (\n    {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n);\n\nlet mapDispatchToProps = (\n    {\n        getUser,\n        getUserStatus,\n        updateMyStatus\n    }\n);\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),  // KONVEIER 3\n    // 􀄨\n    withRouter,                                             // KONVEIER 2\n    // 􀄨\n    withAuthRedirect,                                       // KONVEIER 1\n    // 􀄨\n)(ProfileContainer);\n","import React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nlet mapStateToPropsForRedirect = (state) => (\n    {   // USED ONLY FOR withAuthRedirect() HOC;\n        isAuth: state.auth.isAuth\n    }\n);\n\n// IMPORTANT SHIT:\n// This HOC function creates 2 CONTAINERS:\n// Container 1 is just to GET the isAuth value from the store;\n// Container 2 is to REUSE the code bellow in 2 Components:\n// \"if (!this.props.isAuth) return <Navigate to={\"/login\"} />\"\nconst withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n\n        render() {\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />\n            return <Component {...this.props }/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent =\n        connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}\n\nexport default withAuthRedirect;\n"],"names":["React","props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","onBlur","updateMyStatus","onChange","e","currentTarget","value","_ref","profile","className","classes","src","photos","large","ProfileStatusWithHooks","fullName","aboutMe","contacts","github","Preloader","_Fragment","message","likes","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","maxLengthCreator","placeholder","myPosts","posts","map","pst","Post","likesCount","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","router","params","authorizedUserId","getUser","getUserStatus","Profile","_objectSpread","mapDispatchToProps","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","Navigate","to"],"sourceRoot":""}