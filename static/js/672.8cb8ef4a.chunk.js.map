{"version":3,"file":"static/js/672.8cb8ef4a.chunk.js","mappings":"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","sources":["webpack://puti-samuraia/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialog\":\"Dialogs_dialog__htSTl\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import classes from \"../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/'+ props.id;\n\n    return (\n        <div className={`${classes.dialog} ${classes.active}`}>\n            <NavLink to={ path }> {props.name} </NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;","import classes from \"../Dialogs.module.css\";\nimport React from \"react\";\n\nconst Message = (props) => {\n    return <div className={classes.dialog}> { props.message } </div>;\n}\n\nexport default Message;","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nexport const AddMessageForm = (props) => { // THE FORM\n\n    return (\n        <form onSubmit={props.handleSubmit }>\n            <div>\n\n                <Field component={Textarea}\n                       validate={[required, maxLengthCreator(20)]}\n                       name=\"newMessageBody\"\n                       placeholder=\"Enter your message\"/>\n            </div>\n            <div>\n\n                <button>Send</button>\n\n            </div>\n        </form>\n    );\n}\nconst AddMessageReduxForm = reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm);\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n\n    // Mapping data:\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n    let messageElements = state.messages.map(msg => <Message message={msg.message} key={msg.id}/>);\n\n    // FOCUS:\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    return (\n        <div className={classes.dialogs}>\n\n            <div className={classes.dialogsItems}>\n                {dialogsElements}\n            </div>\n\n            <div className={classes.messages}>\n                <div>{messageElements}</div>\n                <AddMessageReduxForm onSubmit={addNewMessage} />\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default Dialogs;","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport Dialogs from \"./Dialogs\";\nimport {compose} from \"redux\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps), // KONVEIER 2\n    // 􀄨\n    withAuthRedirect, // KONVEIER 1\n    // 􀄨\n)(Dialogs);","import React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nlet mapStateToPropsForRedirect = (state) => (\n    {   // USED ONLY FOR withAuthRedirect() HOC;\n        isAuth: state.auth.isAuth\n    }\n);\n\n// IMPORTANT SHIT:\n// This HOC function creates 2 CONTAINERS:\n// Container 1 is just to GET the isAuth value from the store;\n// Container 2 is to REUSE the code bellow in 2 Components:\n// \"if (!this.props.isAuth) return <Navigate to={\"/login\"} />\"\nconst withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n\n        render() {\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />\n            return <Component {...this.props }/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent =\n        connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}\n\nexport default withAuthRedirect;\n"],"names":["props","path","id","_jsx","className","concat","classes","children","_jsxs","NavLink","to","name","message","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","maxLengthCreator","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messageElements","messages","msg","Message","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React"],"sourceRoot":""}